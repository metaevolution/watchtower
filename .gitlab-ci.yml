

variables:
  KUBECONFIG: .kube/config

lint:
  image: 
    name: python:latest
    entrypoint: [""]
  stage: build
  except:
    - main
  before_script:
    - pip install -r requirements.txt
    - pip install -r requirements-dev.txt
  script:
    - pylint watchtower/  || pylint-exit $?
    - python3 -m flake8 watchtower/ --exit-zero

validate-docker-build:
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  stage: build
  environment: production
  only: 
    - develop
  except:
    - main
  script:
    - mkdir -p /kaniko/.docker
    - /kaniko/executor --context $CI_PROJECT_DIR --dockerfile $CI_PROJECT_DIR/Dockerfile --no-push

build-docker-image-from-tag:
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  stage: build
  environment: production
  script:
    - mkdir -p /kaniko/.docker
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
    - /kaniko/executor --context $CI_PROJECT_DIR --dockerfile $CI_PROJECT_DIR/Dockerfile --destination $CI_REGISTRY_IMAGE:$CI_COMMIT_TAG --destination $CI_REGISTRY_IMAGE:latest
  rules:
    - if: $CI_COMMIT_TAG        

staging-deploy:
  stage: deploy
  image: dtzar/helm-kubectl
  environment: staging
  only:
    - staging
  when: manual
  before_script:
    - sed -ie "s/deploy-date-value/$(date)/g" kubernetes/deployment-test.yml
    - mkdir -p .kube/ && touch .kube/config
    - echo ${KUBE_CONFIG} | base64 -d > .kube/config
  script:
    - echo "$MONGODB_DB"
    - echo "$MONGODB_USERNAME"
    - echo "$MONGODB_SERVER"
    - kubectl apply -f kubernetes/namespace-test.yml --kubeconfig=${KUBECONFIG}
    - kubectl apply -f kubernetes/secrets-test.yml --kubeconfig=${KUBECONFIG}
    - kubectl apply -f kubernetes/configmap-test.yml --kubeconfig=${KUBECONFIG}
    - kubectl apply -f kubernetes/deployment-test.yml --kubeconfig=${KUBECONFIG}

prod-deploy:
  stage: deploy
  image: dtzar/helm-kubectl
  environment: production
  only:
    - tags
  when: manual
  before_script:
    - sed -ie "s/deploy-date-value/$(date)/g" kubernetes/deployment.yml
    - mkdir -p .kube/ && touch .kube/config
    - echo ${KUBE_CONFIG} | base64 -d > .kube/config
  script:
    - kubectl apply -f kubernetes/namespace.yml --kubeconfig=${KUBECONFIG}
    - kubectl apply -f kubernetes/secrets.yml --kubeconfig=${KUBECONFIG}
    - kubectl apply -f kubernetes/configmap.yml --kubeconfig=${KUBECONFIG}
    - kubectl apply -f kubernetes/deployment.yml --kubeconfig=${KUBECONFIG}